// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Permit.Persistence;

#nullable disable

namespace Permit.Persistence.Migrations
{
    [DbContext(typeof(PermitDbContext))]
    [Migration("20230330210312_AddingPermit")]
    partial class AddingPermit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Permit.Domain.Entities.Permit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<DateTime>("LastUpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdatedAt");

                    b.Property<DateTime>("PermitDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermitTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermitTypeId");

                    b.ToTable("Permit", (string)null);
                });

            modelBuilder.Entity("Permit.Domain.Entities.PermitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("LastUpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("PermitType", (string)null);
                });

            modelBuilder.Entity("Permit.Domain.Entities.Permit", b =>
                {
                    b.HasOne("Permit.Domain.Entities.PermitType", "PermitType")
                        .WithMany("Permits")
                        .HasForeignKey("PermitTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PermitType");
                });

            modelBuilder.Entity("Permit.Domain.Entities.PermitType", b =>
                {
                    b.Navigation("Permits");
                });
#pragma warning restore 612, 618
        }
    }
}
